{
  "name": "sololevel",
  "private": true,
  "workspaces": {
    "packages": [
      "./apps/*",
      "./packages/*",
      "./packages/types/*",
      "./supabase/functions"
    ]
  },
  "installConfig": {},
  "scripts": {
    "native": "cd apps/expo && yarn start",
    "native:prebuild": "cd apps/expo && yarn prebuild",
    "native:prebuild:ios": "yarn flag:vision && cd apps/expo && EXPO_NO_TELEMETRY=true yarn native:prebuild --platform ios",
    "ios": "cd apps/expo && EXPO_NO_TELEMETRY=true yarn ios --no-install",
    "android": "cd apps/expo && EXPO_NO_TELEMETRY=true yarn android --no-install",
    "update:ios": "cd ios && pod install",
    "update:android": "cd android && pod install",
    "watch": "ultra -r --no-pretty --concurrency 400 watch",
    "vercel:install": "yarn set version 3.5 && yarn install",
    "web": "cd apps/next && yarn dev",
    "web:extract": "DISABLE_EXTRACTION=false yarn workspace next-app dev",
    "web:prod": "yarn workspace next-app build",
    "web:prod:serve": "yarn workspace next-app serve",
    "postinstall": "sh -c 'if [ \"${CI:-false}\" = \"true\" ]; then echo \"Skipping postinstall build on CI\"; else yarn check-tamagui && yarn build; fi'",
    "build": "turbo build",
    "build:web": "turbo build --filter=next-app",
    "build:native": "turbo build --filter=expo-app",
    "build:packages": "turbo build --filter=@my/config --filter=@my/ui",
    "dev": "turbo dev",
    "type-check": "turbo type-check",
    "lint": "biome check .",
    "lint:fix": "biome check --write .",
    "format": "biome format .",
    "format:fix": "biome format --write .",
    "deno:check": "cd supabase/functions/ai-analyze-video && deno check",
    "deno:lint": "cd supabase/functions && deno lint",
    "deno:lint:fix": "cd supabase/functions && deno lint --fix",
    "type-check:all": "yarn type-check && yarn workspace @my/supabase-functions type-check && yarn deno:check",
    "lint:all": "yarn lint && yarn deno:lint",
    "lint:fix:all": "yarn lint:fix && yarn deno:lint:fix",
    "verify": "yarn type-check:all && yarn lint:all && yarn test:ci",
    "pre-pr": "yarn verify",
    "almighty-push": "add . && git commit -m \"$1\" && git push",
    "test:native:pipeline": "PATH=\"$PATH:$HOME/.maestro/bin:/opt/homebrew/opt/openjdk/bin\" maestro test .maestro/pipeline-test.yaml",
    "dev:mvp": "turbo dev",
    "build:mvp": "turbo build",
    "type-check:mvp": "turbo type-check",
    "lint:mvp": "biome check .",
    "lint:fix:mvp": "biome check --write .",
    "format:mvp": "biome format .",
    "format:fix:mvp": "biome format --write .",
    "dev:prod": "turbo dev --filter=production",
    "build:prod": "turbo build --filter=production",
    "type-check:prod": "tsc --project tsconfig.production.json",
    "lint:prod": "biome check . --config biome.production.json",
    "lint:fix:prod": "biome check --write . --config biome.production.json",
    "format:prod": "biome format . --config biome.production.json",
    "format:fix:prod": "biome format --write . --config biome.production.json",
    "upgrade:tamagui": "yarn up '*tamagui*'@latest '@tamagui/*'@latest",
    "flag:vision": "./scripts/toggles/toggle-camera.sh vision",
    "flag:expo": "./scripts/toggles/toggle-camera.sh expo",
    "upgrade:tamagui:canary": "yarn up '*tamagui*'@canary '@tamagui/*'@canary",
    "check-tamagui": "tamagui check",
    "test": "yarn workspaces foreach --all --exclude expo-app run test --maxWorkers=4",
    "test:watch": "yarn workspaces foreach --all run test:watch",
    "test:coverage": "yarn workspaces foreach --all --exclude expo-app run test:coverage --maxWorkers=4",
    "test:integration": "yarn workspaces foreach --all --exclude expo-app run test:integration --maxWorkers=2",
    "test:coverage:report": "yarn workspaces foreach --all --exclude expo-app run test:coverage:report",
    "test:supabase": "yarn workspace @my/supabase-functions test:all",
    "test:db": "yarn supabase test db",
    "test:db:local": "yarn supabase start && yarn test:db",
    "db:serve:local": "yarn supabase functions serve --env-file .env.local",
    "db:serve": "yarn supabase functions serve --env-file .env",
    "db:reset": "yarn supabase db reset && yarn db:webhook:studio && node scripts/supabase/seedTestUser.mjs",
    "db:webhook:studio": "node scripts/supabase/studio-create-db-webhook.mjs",
    "test:ci": "yarn test && yarn test:supabase && yarn test:db",
    "test:ai": "node scripts/supabase/edge-functions/test-ai-function.mjs",
    "test:ai:video": "node scripts/supabase/edge-functions/test-ai-video.mjs",
    "test:ai:ssml": "node scripts/supabase/edge-functions/test-ai-ssml.mjs",
    "test:ai:audio": "node scripts/supabase/edge-functions/test-ai-audio.mjs",
    "test:e2e": "detox test",
    "test:e2e:ios": "detox test --configuration ios.sim.debug",
    "test:e2e:android": "detox test --configuration android.emu.debug",
    "build:e2e:ios": "detox build --configuration ios.sim.debug",
    "build:e2e:android": "detox build --configuration android.emu.debug",
    "deps:check": "check-dependency-version-consistency",
    "security:audit": "yarn npm audit --all --recursive",
    "security:audit:ci": "node scripts/ops/ci-security-audit.mjs",
    "security:fix": "node scripts/ops/fix-security-vulnerabilities.mjs",
    "validate:audio-bucket": "node scripts/supabase/storage/validate-audio-bucket.mjs",
    "setup:audio-bucket-cors": "node scripts/supabase/storage/setup-audio-bucket-cors.mjs",
    "test:tts:signed-urls": "node scripts/supabase/edge-functions/test-tts-signed-urls.mjs",
    "supabase:optimize": "node scripts/supabase/optimize-memory.mjs",
    "supabase:monitor": "node scripts/supabase/monitor-memory.mjs",
    "prepare": "husky",
    "storybook-generate": "sb-rn-get-stories",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build"
  },
  "resolutions": {
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-test-renderer": "19.0.0",
    "@types/react": "^19.1.12",
    "expo": "~53.0.23",
    "react-refresh": "^0.14.0",
    "react-native-svg": "^15.12.1",
    "react-native-web": "^0.21.0",
    "react-native": "0.79.6",
    "path-to-regexp": "^6.3.0",
    "undici": "^6.0.0",
    "esbuild": "^0.19.5",
    "@types/react-native": "npm:@types/react-native-empty@1.0.0",
    "glob": "^9.0.0",
    "rimraf": "^5.0.0",
    "@xmldom/xmldom": "^0.8.0"
  },
  "dependencies": {
    "@babel/core": "^7.28.3",
    "@babel/runtime": "^7.26.10",
    "@tamagui/sheet": "^1.132.25",
    "check-dependency-version-consistency": "^4.1.0",
    "expo": "~53.0.23",
    "expo-modules-core": "^2.5.0",
    "husky": "^9.1.6",
    "immer": "^10.1.1",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-native": "0.79.6",
    "react-native-worklets-core": "^1.6.2",
    "supabase": "2.47.2",
    "turbo": "^1.13.4",
    "typescript": "^5.9.2",
    "ultra-runner": "^3.10.5",
    "undici": "^5.29.0"
  },
  "packageManager": "yarn@4.9.3",
  "engines": {
    "node": "20"
  },
  "devDependencies": {
    "@biomejs/biome": "^1.9.3",
    "@gorhom/bottom-sheet": "^5.2.3",
    "@playwright/test": "^1.55.0",
    "@react-native-async-storage/async-storage": "^2.2.0",
    "@react-native-community/datetimepicker": "^8.4.4",
    "@react-native-community/slider": "^4.5.7",
    "@storybook/addon-docs": "^9.1.2",
    "@storybook/addon-ondevice-actions": "^9.1.0",
    "@storybook/addon-ondevice-controls": "^9.1.0",
    "@storybook/react-native": "^9.1.0",
    "@storybook/react-native-web-vite": "^9.1.2",
    "@tamagui/cli": "1.132.20",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/react-native": "^13.3.3",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.3.0",
    "@types/pg": "^8",
    "@types/react-native-web": "^0",
    "@types/ws": "^8",
    "@vitest/coverage-v8": "^3.2.4",
    "babel-loader": "^10.0.0",
    "bcryptjs": "^3.0.2",
    "detox": "^20.29.5",
    "expo": "~53.0.23",
    "jest": "^29.7.0",
    "jest-expo": "^53.0.9",
    "jsdom": "^26.1.0",
    "pg": "^8.16.3",
    "react-native-gesture-handler": "^2.28.0",
    "react-native-reanimated": "^4.0.2",
    "react-native-safe-area-context": "^5.6.0",
    "react-native-svg": "^15.12.1",
    "react-native-web": "^0.21.0",
    "react-test-renderer": "19.0.0",
    "storybook": "^9.1.2",
    "vite": "7.1.5",
    "vitest": "^3.2.4",
    "webpack": "^5.79.0",
    "webpack-bundle-analyzer": "^4.9.0",
    "ws": "^8.18.3"
  },
  "version": "1.0.0"
}
