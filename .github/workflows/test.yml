name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Type check
        run: yarn type-check

      - name: Run unit tests with coverage
        run: yarn test:coverage

      - name: Upload test results and coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: |
            packages/*/coverage/
            test-results/
            
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: |
            packages/app/coverage/coverage-final.json
            packages/ui/coverage/coverage-final.json
            packages/api/coverage/coverage-final.json
          fail_ci_if_error: false

  build-tests:
    name: Build Tests
    runs-on: ubuntu-latest
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Debug env vars
        run: env | grep SUPABASE

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build:packages

      - name: Build web app
        run: yarn build:web

      - name: Build native app (prebuild)
        run: yarn native:prebuild

  e2e-web:
    name: E2E Web Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, build-tests]
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Playwright browsers
        run: yarn dlx playwright install --with-deps

      - name: Build web app
        run: yarn build:web

      - name: Start web server
        run: yarn web:prod:serve &
        
      - name: Wait for server
        run: yarn workspace next-app exec wait-on --timeout 30000 http://localhost:8151

      - name: Run Playwright tests
        run: yarn dlx playwright test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/

  e2e-ios:
    name: E2E iOS Tests
    runs-on: macos-latest
    needs: [unit-tests, build-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Install Pods
        run: cd apps/expo/ios && pod install

      - name: Build iOS app for Detox
        run: yarn build:e2e:ios

      - name: Run iOS Detox tests
        run: yarn test:e2e:ios

      - name: Upload iOS test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-e2e-results
          path: |
            e2e/artifacts/
            e2e/screenshots/

  e2e-android:
    name: E2E Android Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, build-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Run Android E2E Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          avd-name: Pixel_7_API_33
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none
          disable-animations: true
          script: |
            adb devices
            adb wait-for-device
            adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done'
            yarn build:e2e:android
            yarn test:e2e:android

      - name: Upload Android test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-e2e-results
          path: |
            e2e/artifacts/
            e2e/screenshots/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [build-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      # Add this to force yarn usage
      npm_config_user_agent: "yarn"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev

      - name: Clean Yarn cache
        run: yarn cache clean

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build web app
        run: yarn build:web

      - name: Analyze bundle size
        run: |
          cd apps/next
          yarn dlx @next/bundle-analyzer
          
      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: apps/next/.next/analyze/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    env:
      EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
      EXPO_PUBLIC_SUPABASE_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_KEY }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      npm_config_user_agent: "yarn"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install native build tools
        run: sudo apt-get update && sudo apt-get install -y build-essential python3 libvips-dev
      
      - name: Clean Yarn cache
        run: yarn cache clean
        
      - name: Install dependencies
        run: yarn install --immutable

      - name: Run security audit
        run: yarn npm audit --all --recursive

      - name: Check dependency versions
        run: yarn deps:check